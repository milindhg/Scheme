Welcome to DrRacket, version 6.1 [3m].
Language: racket [custom]; memory limit: 128 MB.
> (require "a2-student-tests.rkt")
> (all-numsls '(milind 3 hemant gokhale 4 5 6 67))
. . all-numsls: undefined;
 cannot reference an identifier before its definition
> (test-file #:file-name "a2.rkt")
--------------------
A2: > unique-vars > unique-vars: 1
unique-vars: 1
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(y x)
'(x y)
tested:     (unique-vars '((lambda (y) (x x)) (x y)))
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > unique-vars > unique-vars: 2
unique-vars: 2
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(x y z)
'(z y x)
tested:     (unique-vars '((lambda (z) (lambda (y) (z y))) x))
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > unique-free-vars > unique-free-vars: 3
unique-free-vars: 3
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(e y x)
'(y e x)
tested:     (unique-free-vars '((lambda (x) ((x y) e)) (lambda (c) (x (lambda (x) (x (e c)))))))
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > unique-bound-vars > unique-bound-vars: 3
unique-bound-vars: 3
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(c x)
'(x c)
tested:     (unique-bound-vars '((lambda (x) ((x y) e)) (lambda (c) (x (lambda (x) (x (e c)))))))
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > lex > lex: 1
lex: 1
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'((free-var x))
'(free-var x)
tested:     (lex 'x '())
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > lex > lex: 3
lex: 3
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(lambda ((free-var y)))
'(lambda (free-var y))
tested:     (lex '(lambda (x) y) '())
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > lex > lex: 5
lex: 5
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'((lambda ((var 0) (free-var y))) lambda (lambda (((free-var e)) var 1)))
'((lambda ((var 0) (free-var y))) (lambda (lambda ((free-var e) (var 1)))))
tested:     (lex '((lambda (x) (x y)) (lambda (c) (lambda (d) (e c)))) '())
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > lex > lex: 6
lex: 6
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'(lambda (lambda
          (lambda (lambda
                   (lambda (lambda
                            (lambda (lambda
                                     ((((((var 1) var 3) var 5) var 2) var 0)
                                      (free-var f))))))))))
'(lambda (lambda
          (lambda (lambda
                   (lambda (lambda
                            (lambda (lambda
                                     ((((((var 1) (var 3)) (var 5)) (var 2))
                                       (var 0))
                                      (free-var f))))))))))
tested:     (lex '(lambda (a) (lambda (b) (lambda (c) (lambda (a) (lambda (b) (lambda (d) (lambda (a) (lambda (e) (((((a b) c) d) e) f))))))))) '())
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > lex > lex: 7
lex: 7
FAILURE
name:       check
location:   a2-student-tests.rkt:224:31
params:     #<procedure:equal?>
'((lambda (lambda
           (lambda ((((((var 2) var 1) var 0) (free-var w)) (free-var x))
                    (free-var y)))))
  lambda
  (lambda (lambda
           (((((((free-var a)) (free-var b)) (free-var c)) var 2) var 1)
            var
            0))))
'((lambda (lambda
           (lambda ((((((var 2) (var 1)) (var 0)) (free-var w)) (free-var x))
                    (free-var y)))))
  (lambda (lambda
           (lambda ((((((free-var a) (free-var b)) (free-var c)) (var 2))
                     (var 1))
                    (var 0))))))
tested:     (lex '((lambda (a) (lambda (b) (lambda (c) (((((a b) c) w) x) y)))) (lambda (w) (lambda (x) (lambda (y) (((((a b) c) w) x) y))))) '())
. . a2-student-tests.rkt:224:31: Check failure
--------------------
--------------------
A2: > unify > unify: undefined
unify: undefined
FAILURE
name:       check-not-exn
location:   a2-student-tests.rkt:219:19
params:     #<procedure:temp354>
message:    "Exception raised"
exception-me"unify: undefined;\n cannot reference an identifier before its definition"
exception:  #(struct:exn:fail:contract:variable "unify: undefined;\n cannot reference an identifier before its definition" #<continuation-mark-set> unify)
. . a2-student-tests.rkt:219:19: Check failure
--------------------
--------------------
A2: > walk-symbol-update > walk-symbol-update: undefined
walk-symbol-update: undefined
FAILURE
name:       check-not-exn
location:   a2-student-tests.rkt:219:19
params:     #<procedure:temp392>
message:    "Exception raised"
exception-me"walk-symbol-update: undefined;\n cannot reference an identifier before its definition"
exception:  #(struct:exn:fail:contract:variable "walk-symbol-update: undefined;\n cannot reference an identifier before its definition" #<continuation-mark-set> walk-symbol-update)
. . a2-student-tests.rkt:219:19: Check failure
--------------------
--------------------
A2: > var-occurs-both? > var-occurs-both?: undefined
var-occurs-both?: undefined
FAILURE
name:       check-not-exn
location:   a2-student-tests.rkt:219:19
params:     #<procedure:temp400>
message:    "Exception raised"
exception-me"var-occurs-both?: undefined;\n cannot reference an identifier before its definition"
exception:  #(struct:exn:fail:contract:variable "var-occurs-both?: undefined;\n cannot reference an identifier before its definition" #<continuation-mark-set> var-occurs-both?)
. . a2-student-tests.rkt:219:19: Check failure
--------------------
64 success(es) 12 failure(s) 0 error(s) 76 test(s) run
12
> 